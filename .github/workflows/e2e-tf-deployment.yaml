name: Helm Charts E2E Testing
on:
  push:
    branches:
      - main
    paths:
      - 'src/main/charts/bamboo/**'
      - 'src/main/charts/bamboo-agent/**'
  workflow_dispatch:

jobs:
  test:
    name: Deploy Infrastructure for Atlassian DC products and Run End to End Tests
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: us-east-1
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_bamboo_license: ${{ secrets.TF_VAR_BAMBOO_LICENSE }}

    steps:
      - name: Checkout Helm charts
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.7.1

      - name: Execute helm dependency update for bamboo chart
        run: helm dependency update src/main/charts/bamboo
      - name: Execute helm dependency update for bamboo-agent chart
        run: helm dependency update src/main/charts/bamboo-agent


      - name: Checkout Deployment Automation
        run: |
          git clone https://github.com/atlassian-labs/data-center-terraform.git tmp && cd tmp
          LTS=$(curl -s GET https://api.github.com/repos/atlassian-labs/data-center-terraform/tags | grep "name" | sed -nE 's/^.*"(.*)".*$/\1/p' | grep "^[0-9]*.[0-9]*.[0-9]*$"| sort -V | tail -1)
          echo "LTS version for Deployment Automation for Atlassian Data Center Products: '${LTS}'" && cd ..
          git clone -b $LTS https://github.com/atlassian-labs/data-center-terraform.git tf

      - name: Setup Go environment
        uses: actions/setup-go@v2.1.4
        with:
          go-version: 1.17

      - name: Install Go dependencies
        id: setup-dependencies
        working-directory: tf/test/
        run: |
          go get -v -t -d ./... && go mod tidy
          echo ::set-output name=exit_code::$?

      - name: Deploy the infrastructure, install helm charts, run E2E tests, and cleanup
        id: e2e-test
        working-directory: tf/test/
        run: |
          set -o pipefail
          # Create test output directory
          mkdir e2etest/artifacts
          
          # Add Bamboo helm chart location to the config template
          echo "bamboo_internal_use = \"$(pwd)/../../src/main/charts/bamboo\"" >> ./e2etest/test-config.tfvars.tmpl
          
          # Deploy infrastructure, install helm charts, run e2e tests, and cleanup all
          go test ./e2etest -v -timeout 60m -run Installer | tee ./e2etest/artifacts/e2etest.log

      - name: Upload test log files
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: e2e-test-artifacts
          path: tf/test/e2etest/artifacts/
