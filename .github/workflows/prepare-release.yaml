# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Prepare Release

on:
  push:
    branches:
      - release/*

jobs:
  prepare-release:
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PYTHONPATH: /opt/hostedtoolcache/Python/3.9.14/x64/lib/python3.9/site-packages
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v1
        with:
          fetch-depth: 0

      - name: Checkout repo
        run: |
          git clone https://github.com/atlassian/data-center-helm-charts
          
      - name: Test git
        run: |
          git --version

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.9.4

      - name: Setup Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.9.14'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip gitpython ruamel_yaml

      - name: Generate changelog and Chart annotations
        run: |
          echo "[INFO]: Preparing release ${GITHUB_REF_NAME##*/}"
          cd data-center-helm-charts
          python src/main/scripts/prepare_release.py ${GITHUB_REF_NAME##*/}

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Commit changes and raise a PR
        run: |
          git checkout ${GITHUB_REF_NAME}
          cp -rf data-center-helm-charts/src/* src
          rm -rf data-center-helm-charts
          git status
          git add -A
          git commit -m "Prepare release ${GITHUB_REF_NAME##*/}"
          git push origin ${GITHUB_REF_NAME}
          gh pr create --title "Release/${GITHUB_REF_NAME##*/}" --body "Prepare to release ${GITHUB_REF_NAME##*/}" --base main --head ${GITHUB_REF_NAME}
