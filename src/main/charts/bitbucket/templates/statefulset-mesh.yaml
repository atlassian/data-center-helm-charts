{{ if .Values.bitbucket.mesh.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "common.names.fullname" . }}-mesh
  labels:
    {{- include "common.labels.commonLabels" . | nindent 4 }}
  annotations:
    {{- with .Values.bitbucket.mesh.additionalAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- if .Values.updateStrategy }}
  {{- with .Values.updateStrategy }}
  updateStrategy:
  {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- end }}
  {{ if .Values.ordinals.enabled }}
  ordinals:
    start: {{ .Values.ordinals.start }}
  {{ end }}
  replicas: {{ .Values.bitbucket.mesh.replicaCount }}
  podManagementPolicy: {{ default "OrderedReady" .Values.bitbucket.mesh.podManagementPolicy }}
  serviceName: {{ include "common.names.fullname" . }}-mesh
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "common.names.name" . }}-mesh
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config-jvm: {{ include (print $.Template.BasePath "/config-jvm-mesh.yaml") . | sha256sum }}
        {{- if .Values.fluentd.enabled }}
        checksum/config-fluentd: {{ include (print $.Template.BasePath "/configmap-fluentd.yaml") . | sha256sum }}
        {{- end }}
        {{- include "bitbucket.mesh.podAnnotations" . | nindent 8 }}
      labels:
        app.kubernetes.io/name: {{ include "common.names.name" . }}-mesh
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- include "bitbucket.mesh.podLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "bitbucket.serviceAccountName" . }}
      terminationGracePeriodSeconds: {{ .Values.bitbucket.mesh.shutdown.terminationGracePeriodSeconds }}
      hostAliases:
        {{- include "bitbucket.additionalHosts" . | nindent 8 }}
      initContainers:
        {{- include "bitbucket.mesh.additionalInitContainers" . | nindent 8 }}
        {{- if and .Values.monitoring.exposeJmxMetrics .Values.monitoring.fetchJmxExporterJar }}
        - name: fetch-jmx-exporter
          image: {{ .Values.monitoring.jmxExporterImageRepo}}:{{ .Values.monitoring.jmxExporterImageTag}}
          command: ["cp"]
          args: ["/opt/bitnami/jmx-exporter/jmx_prometheus_javaagent.jar", "{{ .Values.bitbucket.mesh.volume.mountPath }}"]
          volumeMounts:
            - mountPath: {{ .Values.bitbucket.mesh.volume.mountPath | quote }}
              name: mesh-home
          {{- if .Values.openshift.runWithRestrictedSCC }}
          {{- else}}
          {{- if .Values.monitoring.jmxExporterInitContainer.runAsRoot }}
          securityContext:
            runAsUser: 0
          {{- else if .Values.monitoring.jmxExporterInitContainer.customSecurityContext }}
          securityContext:
          {{- with .Values.monitoring.jmxExporterInitContainer.customSecurityContext }}
          {{- toYaml .  | nindent 4 }}
          {{- end }}
          {{- end }}
          {{- end }}
        {{- end }}
        {{- if or .Values.bitbucket.mesh.additionalCertificates.secretName .Values.bitbucket.mesh.additionalCertificates.secretList }}
        - name: import-certs
          image: {{ .Values.bitbucket.mesh.image.repository }}:{{ .Values.bitbucket.mesh.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: keystore
              mountPath: /var/ssl
          {{- if.Values.bitbucket.mesh.additionalCertificates.secretName }}
            - name: certs
              mountPath: /tmp/crt
          {{- else }}
          {{- range .Values.bitbucket.mesh.additionalCertificates.secretList }}
            {{- $secretName := .name }}
            {{- range .keys }}
            - name: {{ $secretName }}
              mountPath: /tmp/crt/{{$secretName}}-{{ . }}
              subPath: {{ . }}
            {{- end }}
          {{- end }}
          {{- end }}
          command: ["/bin/bash"]
          args: ["-c", {{ include "bitbucketMesh.addCrtToKeystoreCmd" . }}]
          resources:
          {{- with .Values.bitbucket.mesh.additionalCertificates.initContainer.resources }}
          {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}
      containers:
        - name: {{ if .Values.bitbucket.useHelmReleaseNameAsContainerName}}{{ include "common.names.fullname" . }}-mesh{{ else }}{{ .Chart.Name }}-mesh{{ end }}
          image: {{ .Values.bitbucket.mesh.image.repository }}:{{ .Values.bitbucket.mesh.image.tag }}
          imagePullPolicy: {{ .Values.bitbucket.mesh.image.pullPolicy }}
          ports:
            - name: mesh
              containerPort: {{ .Values.bitbucket.mesh.service.port }}
              protocol: TCP
            {{- include "common.jmx.port" . | nindent 12 }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.bitbucket.mesh.service.port }}
            periodSeconds: 5
            failureThreshold: 60
            initialDelaySeconds: 10
          {{- with .Values.bitbucket.containerSecurityContext}}
          securityContext:
            {{- toYaml . | nindent 12}}
          {{- end}}
          volumeMounts:
            - name: mesh-home
              mountPath: {{ .Values.bitbucket.mesh.volume.mountPath | quote }}
            {{- range $i, $n := .Values.bitbucket.mesh.additionalFiles }}
            - name: {{ .name }}-{{$i}}
              mountPath: {{ .mountPath }}/{{ .key }}
              subPath: {{ .key }}
            {{ end }}
            {{- if or .Values.bitbucket.mesh.additionalCertificates.secretName .Values.bitbucket.mesh.additionalCertificates.secretList }}
            - name: keystore
              mountPath: /var/ssl
            {{- end }}
            {{- include "common.jmx.config.volumeMounts" . | nindent 12 }}
          {{- with .Values.bitbucket.mesh.resources.container }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: GRPC_SERVER_PORT
              value: {{ .Values.bitbucket.mesh.service.port | quote }}
            - name: MESH_HOME
              value: {{ .Values.bitbucket.mesh.volume.mountPath }}
            - name: KUBE_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: JAVA_OPTS
              value: "-Dcluster.node.name=$(KUBE_POD_NAME)"
            - name: JVM_MINIMUM_MEMORY
              valueFrom:
                configMapKeyRef:
                  key: min_heap
                  name: {{ include "common.names.fullname" . }}-jvm-config-mesh
            - name: JVM_MAXIMUM_MEMORY
              valueFrom:
                configMapKeyRef:
                  key: max_heap
                  name: {{ include "common.names.fullname" . }}-jvm-config-mesh
            - name: JVM_SUPPORT_RECOMMENDED_ARGS
              valueFrom:
                configMapKeyRef:
                  key: additional_jvm_args
                  name: {{ include "common.names.fullname" . }}-jvm-config-mesh
            {{- if .Values.monitoring.exposeJmxMetrics }}
            - name: JMX_ENABLED
              value: "true"
            {{ end }}
            {{- include "bitbucket.mesh.additionalEnvironmentVariables" . | nindent 12 }}
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", {{ .Values.bitbucket.shutdown.command | quote }}]
        {{- include "fluentd.container" . | nindent 8 }}
      {{- with .Values.bitbucket.mesh.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.bitbucket.mesh.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.bitbucket.mesh.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.bitbucket.mesh.topologySpreadConstraints }}
      topologySpreadConstraints:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.bitbucket.mesh.schedulerName }}
      schedulerName: {{ .Values.bitbucket.mesh.schedulerName  | quote }}
      {{- end }}
      {{- if .Values.bitbucket.mesh.priorityClassName }}
      priorityClassName: {{ .Values.bitbucket.mesh.priorityClassName }}
      {{- end }}
      volumes:
        {{ include "fluentd.config.volume" . | nindent 8 }}
        {{- range $i, $n := .Values.bitbucket.mesh.additionalFiles }}
        - name: {{ .name }}-{{$i}}
          {{ .type }}:
            {{ if hasPrefix .type "secret" }}{{ .type}}Name{{ else }}name{{ end }}: {{ .name }}
            items:
              - key: {{ .key }}
                path: {{ .key }}
        {{ end }}
        {{- if or .Values.bitbucket.mesh.additionalCertificates.secretName .Values.bitbucket.mesh.additionalCertificates.secretList }}
        - name: keystore
          emptyDir: {}
        {{- if .Values.bitbucket.mesh.additionalCertificates.secretName }}
        - name: certs
          secret:
            secretName: {{ .Values.bitbucket.mesh.additionalCertificates.secretName }}
        {{- else }}
        {{- range .Values.bitbucket.mesh.additionalCertificates.secretList }}
        - name: {{ .name }}
          secret:
            secretName: {{ .name }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{ include "common.jmx.config.volume" . | nindent 8 }}
  {{ include "bitbucket.mesh.volumeClaimTemplates" . | nindent 2 }}
{{ end }}
