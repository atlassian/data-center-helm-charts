## Atlassian Bamboo Data Center remote agent Helm values
# 
# HEADS UP! 
#
# A running and configured Bamboo server instance is a prerequisite for agent deployment!
# Ensure that a valid security token and Bamboo server base URL have been supplied for the 
# relevant properties below i.e:
# - bamboo.securityToken
# - bamboo.server
#
# Additionally, the Bamboo server must have; "Remote agent authentication" *disabled* and  
# "Security token verification" *enabled*. Details on these features and how to enable
# and disable them here:
# https://confluence.atlassian.com/bamboo/agent-authentication-289277196.html
##

# -- The initial number of Bamboo agent pods that should be started at deployment time. 
#
replicaCount: 1

# Image configuration 
#
image:

  # -- The Bamboo agent Docker image to use
  # https://hub.docker.com/r/atlassian/bamboo-agent-base
  #
  repository: atlassian/bamboo-agent-base
  
  # -- Image pull policy
  #
  pullPolicy: IfNotPresent
  
  # -- The docker image tag to be used - defaults to the Chart appVersion
  #
  tag: ""
  
# K8s ServiceAccount configuration. Give fine-grained identity and authorization 
# to Pods
#
serviceAccount:

  # -- Set to 'true' if a ServiceAccount should be created, or 'false' if it 
  # already exists.
  #
  create: true
  
  # -- The name of the ServiceAccount to be used by the pods. If not specified, but 
  # the "serviceAccount.create" flag is set to 'true', then the ServiceAccount name 
  # will be auto-generated, otherwise the 'default' ServiceAccount will be used.
  # https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server
  #
  name:
  
  # -- For Docker images hosted in private registries, define the list of image pull 
  # secrets that should be utilized by the created ServiceAccount
  # https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
  #
  imagePullSecrets: []
  # - name: secretName

# Bamboo agent configuration 
#
agent:
  
  # The security token with which the agent will authenticate to the Bamboo server
  # Additional details here:
  # https://confluence.atlassian.com/bamboo/agent-authentication-289277196.html#Agentauthentication-SecuritytokenverificationSecuritytokenverification
  #
  securityToken:
    
  # The K8s DNS record for the Bamboo server service. Should be of the form, <namespace>.<service_name>.svc.cluster.local
  # for example: "bamboo.bamboo.svc.cluster.local"
  # 
  # This value can be obtained by running:
  # export NAMESPACE=<namespace in which the Bamboo server resides>
  # echo "$(echo "${NAMESPACE}.")""$(kubectl exec -it bamboo-0 -- cat /etc/resolv.conf | grep search | awk '{print $2}')"
  # 
  server:

  # Standard K8s field that holds pod-level security attributes and common container settings.
  # https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  # Do not populate when deploying to OpenShift, unless anyuid policy is attached to a service account.
  securityContext:

    # -- The GID used by the Bamboo docker image
    # If not supplied, will default to 2005.
    # This is intended to ensure that the shared-home volume is group-writeable by the GID used by the Bamboo container.
    # However, this doesn't appear to work for NFS volumes due to a K8s bug: https://github.com/kubernetes/examples/issues/260
    #
    fsGroup: 2005

  # -- Standard K8s field that holds security configurations that will be applied to a container.
  # https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  #
  containerSecurityContext: { }

  # Port definitions
  #
  ports:
  
    # -- The port on which the Bamboo agent listens for HTTP traffic
    #
    http: 80
     
  # TODO: As of yet a /status endpoint does not exist for agents. Once delivered the implementation for this
  # must be added
  # Confirm that the Bamboo agent is up and running with a ReadinessProbe
  # https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-readiness-probes
  #
  readinessProbe:
  
    # -- The initial delay (in seconds) for the Bamboo agent container readiness probe, 
    # after which the probe will start running.
    #
    initialDelaySeconds: 10
    
    # -- How often (in seconds) the Bamboo agent container readiness probe will run
    #
    periodSeconds: 5
    
    # -- The number of consecutive failures of the Bamboo agent container readiness probe 
    # before the pod fails readiness checks.
    #
    failureThreshold: 30

  shutdown:

    # -- The termination grace period for pods during shutdown. This
    # should be set to the internal grace period, plus a small buffer
    # to allow the JVM to fully terminate.
    #
    terminationGracePeriodSeconds: 30

    # -- By default pods will be stopped via a [preStop hook](https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/),
    # using a script supplied by the Docker image. If any other
    # shutdown behaviour is needed it can be achieved by overriding
    # this value. Note that the shutdown command needs to wait for the
    # application shutdown completely before exiting; see [the default
    # TODO: This needs to be updated when Steve's changes are done
    # command](https://bitbucket.org/atlassian-docker/docker-atlassian-jira/src/master/shutdown-wait.sh)
    # for details.
    #
    command: "/shutdown-wait.sh"

  # Pod resource requests 
  #
  resources:
  
    # JVM Memory / Heap Size definitions. These values below are based on the 
    # defaults defined for the Bamboo agent docker container.
    # https://bitbucket.org/atlassian-docker/docker-bamboo-agent-base
    #
    jvm:
      
      # -- The maximum amount of heap memory that will be used by the Bamboo agent JVM
      #
      maxHeap: "512m"
      
      # -- The minimum amount of heap memory that will be used by the Bamboo agent JVM
      #
      minHeap: "256m"
      
    # Specifies the standard K8s resource requests and/or limits for the Bamboo agent
    # container. It is important that if the memory resources are specified here, 
    # they must allow for the size of the Bamboo agent JVM. That means the maximum heap 
    # size, plus other JVM overheads, must be accommodated. 
    # Allowing for (maxHeap)*1.5 would be an example.
    #
    container:
      
      requests:
      
        # -- Initial CPU request by Bamboo agent pod
        #
        cpu: "1" # If changing the cpu value update 'ActiveProcessorCount' below
        
        # -- Initial Memory request by Bamboo agent pod
        #
        memory: "2G"
      #  limits:
      #    cpu: "2"
      #    memory: "2G"

  # -- Defines any additional environment variables to be passed to the Bamboo agent
  # container. See https://bitbucket.org/atlassian-docker/docker-bamboo-agent-base for 
  # supported variables.
  #
  additionalEnvironmentVariables: []
     
  
# -- Custom annotations that will be applied to all Bamboo agent pods
#
podAnnotations: {}
#  name: <value>

# -- Standard K8s node-selectors that will be applied to all Bamboo agent pods
#
nodeSelector: {}
#  name: <value>

# -- Standard K8s tolerations that will be applied to all Bamboo agent pods
#
tolerations: []
# - effect: <name>
#   operator: <operator>
#   key: <key>

# -- Standard K8s affinities that will be applied to all Bamboo agent pods
#
affinity: {}
#  name: <value>

# -- Standard K8s schedulerName that will be applied to all Bamboo agent pods.
# Check Kubernetes documentation on how to configure multiple schedulers:
# https://kubernetes.io/docs/tasks/extend-kubernetes/configure-multiple-schedulers/#specify-schedulers-for-pods
#
schedulerName:

# -- Additional container definitions that will be added to all Bamboo agent pods
#
additionalContainers: []
#  - name: <name>
#    image: <image>:<tag>

# -- Additional initContainer definitions that will be added to all Bamboo agent pods
#
additionalInitContainers: []
#  - name: <name>
#    image: <image>:<tag>

# -- Additional labels that should be applied to all resources
#
additionalLabels: {}
#  name: <value>
