{{- if and .Values.ingress.create (not .Values.ingress.openShiftRoute) .Values.synchrony.ingress.path }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "common.names.fullname" . }}-synchrony
  labels:
    {{- include "common.labels.commonLabels" . | nindent 4 }}
  annotations:
    {{ if .Values.ingress.nginx }}
    "nginx.ingress.kubernetes.io/affinity": "cookie"
    "nginx.ingress.kubernetes.io/affinity-mode": "persistent"
    "nginx.ingress.kubernetes.io/proxy-body-size": {{ .Values.ingress.maxBodySize }}
    "nginx.ingress.kubernetes.io/proxy-connect-timeout": {{ .Values.ingress.proxyConnectTimeout|quote }}
    "nginx.ingress.kubernetes.io/proxy-read-timeout": {{ .Values.ingress.proxyReadTimeout|quote }}
    "nginx.ingress.kubernetes.io/proxy-send-timeout": {{ .Values.ingress.proxySendTimeout|quote }}
    {{- end }}
    {{- with .Values.synchrony.ingress.annotations }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
{{ if and (.Values.ingress.https) (.Values.ingress.host) }}
  tls:
    - hosts:
        - {{ .Values.ingress.host }}
      {{ if .Values.ingress.tlsSecretName }}
      secretName: {{ .Values.ingress.tlsSecretName }}
      {{ end }}
{{ end }}
  ingressClassName: {{ default "nginx" .Values.ingress.className }}
  rules:
    - host: {{ .Values.ingress.host }}
      http:
        paths:
          - path: {{ .Values.synchrony.ingress.path }}
            pathType: {{ .Values.synchrony.ingress.pathType | default "Prefix" }}
            backend:
              service:
                name: {{ include "synchrony.fullname" . }}
                port:
                  number: {{ $.Values.synchrony.service.port }}
{{ end }}
