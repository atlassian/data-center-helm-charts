---
# Source: bitbucket/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: unittest-bitbucket
  labels:
    helm.sh/chart: bitbucket-1.0.0
    app.kubernetes.io/name: bitbucket
    app.kubernetes.io/instance: unittest-bitbucket
    app.kubernetes.io/version: "7.15.1-jdk11"
    app.kubernetes.io/managed-by: Helm
---
# Source: bitbucket/templates/config-jvm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: unittest-bitbucket-jvm-config
  labels:
    helm.sh/chart: bitbucket-1.0.0
    app.kubernetes.io/name: bitbucket
    app.kubernetes.io/instance: unittest-bitbucket
    app.kubernetes.io/version: "7.15.1-jdk11"
    app.kubernetes.io/managed-by: Helm
data:
  additional_jvm_args: >-
    -XX:ActiveProcessorCount=2
  max_heap: 1g
  min_heap: 512m
---
# Source: bitbucket/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: unittest-bitbucket
  labels:
    helm.sh/chart: bitbucket-1.0.0
    app.kubernetes.io/name: bitbucket
    app.kubernetes.io/instance: unittest-bitbucket
    app.kubernetes.io/version: "7.15.1-jdk11"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
    - port: 7999
      targetPort: ssh
      protocol: TCP
      name: ssh
    - port: 5701
      targetPort: hazelcast
      protocol: TCP
      name: hazelcast
  selector:
    app.kubernetes.io/name: bitbucket
    app.kubernetes.io/instance: unittest-bitbucket
---
# Source: bitbucket/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: unittest-bitbucket
  labels:
    helm.sh/chart: bitbucket-1.0.0
    app.kubernetes.io/name: bitbucket
    app.kubernetes.io/instance: unittest-bitbucket
    app.kubernetes.io/version: "7.15.1-jdk11"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  serviceName: unittest-bitbucket
  selector:
    matchLabels:
      app.kubernetes.io/name: bitbucket
      app.kubernetes.io/instance: unittest-bitbucket
  template:
    metadata:
      annotations:
        checksum/config-jvm: 27a0817aa16495c57f4e89f436e270cc76aa2204678f535320edc43a89dcee6a
      labels:
        app.kubernetes.io/name: bitbucket
        app.kubernetes.io/instance: unittest-bitbucket
    spec:
      serviceAccountName: unittest-bitbucket
      terminationGracePeriodSeconds: 35
      securityContext:
        fsGroup: 2003
      initContainers:
        - name: nfs-permission-fixer
          image: alpine
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 0 # make sure we run as root so we get the ability to change the volume permissions
          volumeMounts:
            - name: shared-home
              mountPath: "/shared-home"
          command: ["sh", "-c", "(chgrp 2003 /shared-home; chmod g+w /shared-home)"]
      containers:
        - name: bitbucket
          image: "atlassian/bitbucket:7.15.1-jdk11"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 7990
              protocol: TCP
            - name: ssh
              containerPort: 7999
              protocol: TCP
            - name: hazelcast
              containerPort: 5701
              protocol: TCP
          readinessProbe:
            httpGet:
              port: 7990
              path: "/status"
            periodSeconds: 5
            failureThreshold: 60
            initialDelaySeconds: 10
          volumeMounts:
            - name: local-home
              mountPath: "/var/atlassian/application-data/bitbucket"
            - name: shared-home
              mountPath: "/var/atlassian/application-data/shared-home"
          resources:
            requests:
              cpu: "2"
              memory: 2G
          env:
            - name: KUBE_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SERVER_CONTEXT_PATH
              value: "/"
            - name: SERVER_SCHEME
              value: "https"
            - name: SERVER_SECURE
              value: "true"
            - name: SET_PERMISSIONS
              value: "true"
            - name: BITBUCKET_SHARED_HOME
              value: "/var/atlassian/application-data/shared-home"
            - name: JVM_MINIMUM_MEMORY
              valueFrom:
                configMapKeyRef:
                  key: min_heap
                  name: unittest-bitbucket-jvm-config
            - name: JVM_MAXIMUM_MEMORY
              valueFrom:
                configMapKeyRef:
                  key: max_heap
                  name: unittest-bitbucket-jvm-config
            - name: JVM_SUPPORT_RECOMMENDED_ARGS
              valueFrom:
                configMapKeyRef:
                  key: additional_jvm_args
                  name: unittest-bitbucket-jvm-config
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "/shutdown-wait.sh"]
      volumes:
        - name: local-home
          emptyDir: {}
        - name: shared-home
          emptyDir: {}
---
# Source: bitbucket/templates/tests/test-application-status.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "unittest-bitbucket-application-status-test"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
  labels:
    helm.sh/chart: bitbucket-1.0.0
    app.kubernetes.io/name: bitbucket
    app.kubernetes.io/instance: unittest-bitbucket
    app.kubernetes.io/version: "7.15.1-jdk11"
    app.kubernetes.io/managed-by: Helm
spec:
  containers:
    - name: test
      image: alpine
      imagePullPolicy: IfNotPresent
      env:
        - name: STATUS_URL
          value: "http://unittest-bitbucket:80/status"
      command:
        - /bin/sh
        - -ec
        - |
          apk add -q jq curl
          STATUS=$(curl -s "$STATUS_URL")
          echo "Verifying application state is RUNNING or FIRST_RUN: $STATUS"
          echo $STATUS | jq -e '.state|test("RUNNING|FIRST_RUN")'
  restartPolicy: Never
---
# Source: bitbucket/templates/tests/test-shared-home-permissions.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "unittest-bitbucket-shared-home-permissions-test"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
  labels:
    helm.sh/chart: bitbucket-1.0.0
    app.kubernetes.io/name: bitbucket
    app.kubernetes.io/instance: unittest-bitbucket
    app.kubernetes.io/version: "7.15.1-jdk11"
    app.kubernetes.io/managed-by: Helm
spec:
  containers:
    - name: test
      image: debian:stable-slim
      imagePullPolicy: IfNotPresent
      securityContext:
        # We assume that the UID and GID used by the product images are the same, which in practice they are
        runAsUser: 2003
        runAsGroup: 2003
      volumeMounts:
        - name: shared-home
          mountPath: /shared-home
      command:
        - /bin/sh
        - -ec
        - |
          ls -ld /shared-home
          echo "Creating temporary file in shared home as user $(id -u):$(id -g)"
          touch /shared-home/permissions-test
          ls -l /shared-home/permissions-test
          rm /shared-home/permissions-test
  volumes:
    - name: shared-home
      emptyDir: {}
  restartPolicy: Never
