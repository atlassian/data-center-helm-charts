apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: ${DC_APP}-db
  namespace: ${NAMESPACE}
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: ${DC_APP}-db
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: ${DC_APP}
spec:
  instances: 1
  imageName: ghcr.io/cloudnative-pg/postgresql:16.2
  
  resources:
    requests:
      memory: "128Mi"
      cpu: "50m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  
  storage:
    size: 512Mi
  
  bootstrap:
    initdb:
      database: ${DC_APP}
      owner: ${DC_APP}
      secret:
        name: ${DC_APP}-db-credentials
      postInitSQL:
        - "CREATE EXTENSION IF NOT EXISTS pg_stat_statements;"
        - "CREATE EXTENSION IF NOT EXISTS pg_trgm;"
        - "ALTER USER ${DC_APP} CREATEDB;"
        - "GRANT CREATE ON SCHEMA public TO ${DC_APP};"
        - "GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO ${DC_APP};"
        - "GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO ${DC_APP};"
        - "ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO ${DC_APP};"
        - "ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON SEQUENCES TO ${DC_APP};"
        - "CREATE OR REPLACE FUNCTION health_check() RETURNS text AS $$ BEGIN RETURN 'OK'; END; $$ LANGUAGE plpgsql;"
  
  postgresql:
    parameters:
      max_connections: "50"
      shared_buffers: "64MB"
      work_mem: "2MB"
      maintenance_work_mem: "32MB"
      effective_cache_size: "256MB"
      fsync: "off"
      synchronous_commit: "off"
      full_page_writes: "off"